
# Playwright Project Setup 🎭

## Introduction 🌟
This README outlines the steps and commands needed to set up a Playwright testing environment 
for your project.

## 👷🏽‍♂️ Installation
To get started with Playwright, execute one of these commands:
```bash
    1. npm init playwright@latest
        # or
    2. yarn create playwright
        # or
    3. pnpm create playwright
```
# Make choices for language (JavaScript), tests directory, GitHub Actions, and browser downloads during the install.

## 🚀 Running Tests
# Note add --headed to have it run in headed browser 
Execute this command to run your tests:

```bash
# Runs all tests within tests folder 
    1. npx playwright test 

# Runs test with 3 workers (browsers) in parallel 
    2. npx playwright test --workers 3

# Run spesific test file (replace '/example.spec.js' with your file name)
    3. npx playwright test tests/example.spec.js 

# Run spesific test file (replace 'example' with your file name)
    4. npx playwright test tests example

# Run spesific test within the test file by title (replace 'title' with your test name)
    5. npx playwright test -g "title"
```

## 📊 Test Reports
Generate and inspect an HTML report of your tests:

```bash
    npx playwright show-report
```


## 🐛 Debug Mode
Runs Tests in debug mode:  

```bash
    npx playwright test --debug
```

## To turn on/ off via command line Trace = (UI For Debugging)
```bash
    npx playwright test --trace on
```

## 🎞️ Run in Record Mode 
# this will allow you to manually execute the test and the codegen will generate the code for you. 
```bash
    npx playwright codegen
```

# emulate an iPhone in Record Mode. 
```bash
    npx playwright codegen --device="iPhone 14"
```

## 🖥️ UI Mode
Enhance your development experience by running tests in UI mode:

```bash
    npx playwright test --ui
```

## ⬆️ Updating Playwright
Update to the latest version of Playwright using:


```bash
    npm install -D @playwright/test@latest
```

Verify your Playwright version:

```bash
    npx playwright --version
```

## 📋 System Requirements
- Node.js 16+
- Compatible OS versions (see [Playwright documentation](https://playwright.dev/docs/intro)).

## 📚 Further Information/ Q&A 
For comprehensive guidance, visit the [Playwright documentation](https://playwright.dev/docs/intro).

# How to identify an independent xpath locators on inspect 
# example: //input[@name='replace_with_name_property'] 

# How do I pause a run on a spesific step? 
    • To pause a run on a step you must use e.g. 👇
        await page.pause()

# What are the different assertions? 
   1. await expect(page.locator('your locator')).toBeVisible
   2. await expect(page.locator('your locator')).toBeHidden
   3. await expect(page.locator('your locator')).toBeEnabled
   4. await expect(page.locator('your locator')).toBeDisabled
   5. await expect(page.locator('text=example')).toHaveText('example')
   
# How to assert multiple objects without stopping the run? 
    • You need to use soft assertions e.g. 👇 
        await expect.soft(page.locator('your locator')).toBeVisible b nbvnb vc nbv mn